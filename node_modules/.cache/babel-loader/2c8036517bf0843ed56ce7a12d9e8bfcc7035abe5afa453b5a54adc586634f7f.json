{"ast":null,"code":"import _objectSpread from \"C:/Users/mgriz/flashfinanceUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Icons\nimport { aliases, mdi } from \"../iconsets/mdi.mjs\"; // Utilities\nimport { computed, inject, isRef } from 'vue';\nimport { defineComponent, mergeDeep, propsFactory } from \"../util/index.mjs\"; // Types\nexport var IconValue = [String, Function, Object];\nexport var IconSymbol = Symbol[\"for\"]('vuetify:icons');\nexport var makeIconProps = propsFactory({\n  icon: {\n    type: IconValue,\n    required: true\n  },\n  // Could not remove this and use makeTagProps, types complained because it is not required\n  tag: {\n    type: String,\n    required: true\n  }\n}, 'icon');\nexport var VComponentIcon = defineComponent({\n  name: 'VComponentIcon',\n  props: makeIconProps(),\n  setup: function setup(props) {\n    return function () {\n      return _createVNode(props.tag, null, {\n        \"default\": function _default() {\n          return [_createVNode(props.icon, null, null)];\n        }\n      });\n    };\n  }\n});\nexport var VSvgIcon = defineComponent({\n  name: 'VSvgIcon',\n  inheritAttrs: false,\n  props: makeIconProps(),\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs;\n    return function () {\n      return _createVNode(props.tag, _mergeProps(attrs, {\n        \"style\": null\n      }), {\n        \"default\": function _default() {\n          return [_createVNode(\"svg\", {\n            \"class\": \"v-icon__svg\",\n            \"xmlns\": \"http://www.w3.org/2000/svg\",\n            \"viewBox\": \"0 0 24 24\",\n            \"role\": \"img\",\n            \"aria-hidden\": \"true\"\n          }, [_createVNode(\"path\", {\n            \"d\": props.icon\n          }, null)])];\n        }\n      });\n    };\n  }\n});\nexport var VLigatureIcon = defineComponent({\n  name: 'VLigatureIcon',\n  props: makeIconProps(),\n  setup: function setup(props) {\n    return function () {\n      return _createVNode(props.tag, null, {\n        \"default\": function _default() {\n          return [props.icon];\n        }\n      });\n    };\n  }\n});\nexport var VClassIcon = defineComponent({\n  name: 'VClassIcon',\n  props: makeIconProps(),\n  setup: function setup(props) {\n    return function () {\n      return _createVNode(props.tag, {\n        \"class\": props.icon\n      }, null);\n    };\n  }\n});\nexport var defaultSets = {\n  svg: {\n    component: VSvgIcon\n  },\n  \"class\": {\n    component: VClassIcon\n  }\n};\n\n// Composables\nexport function createIcons(options) {\n  return mergeDeep({\n    defaultSet: 'mdi',\n    sets: _objectSpread(_objectSpread({}, defaultSets), {}, {\n      mdi: mdi\n    }),\n    aliases: aliases\n  }, options);\n}\nexport var useIcon = function useIcon(props) {\n  var icons = inject(IconSymbol);\n  if (!icons) throw new Error('Missing Vuetify Icons provide!');\n  var iconData = computed(function () {\n    var iconAlias = isRef(props) ? props.value : props.icon;\n    if (!iconAlias) throw new Error('Icon value is undefined or null');\n    var icon = iconAlias;\n    if (typeof iconAlias === 'string' && iconAlias.includes('$')) {\n      var _icons$aliases;\n      icon = (_icons$aliases = icons.aliases) == null ? void 0 : _icons$aliases[iconAlias.slice(iconAlias.indexOf('$') + 1)];\n    }\n    if (!icon) throw new Error(\"Could not find aliased icon \\\"\".concat(iconAlias, \"\\\"\"));\n    if (typeof icon !== 'string') {\n      return {\n        component: VComponentIcon,\n        icon: icon\n      };\n    }\n    var iconSetName = Object.keys(icons.sets).find(function (setName) {\n      return typeof icon === 'string' && icon.startsWith(\"\".concat(setName, \":\"));\n    });\n    var iconName = iconSetName ? icon.slice(iconSetName.length + 1) : icon;\n    var iconSet = icons.sets[iconSetName !== null && iconSetName !== void 0 ? iconSetName : icons.defaultSet];\n    return {\n      component: iconSet.component,\n      icon: iconName\n    };\n  });\n  return {\n    iconData: iconData\n  };\n};","map":{"version":3,"names":["aliases","mdi","computed","inject","isRef","defineComponent","mergeDeep","propsFactory","IconValue","String","Function","Object","IconSymbol","Symbol","makeIconProps","icon","type","required","tag","VComponentIcon","name","props","setup","_createVNode","default","VSvgIcon","inheritAttrs","_ref","attrs","_mergeProps","VLigatureIcon","VClassIcon","defaultSets","svg","component","createIcons","options","defaultSet","sets","_objectSpread","useIcon","icons","Error","iconData","iconAlias","value","includes","_icons$aliases","slice","indexOf","concat","iconSetName","keys","find","setName","startsWith","iconName","length","iconSet"],"sources":["../../src/composables/icons.tsx"],"sourcesContent":["// Icons\nimport { aliases, mdi } from '@/iconsets/mdi'\n\n// Utilities\nimport { computed, inject, isRef } from 'vue'\nimport { defineComponent, mergeDeep, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, JSXComponent, PropType, Ref } from 'vue'\n\nexport type IconValue = string | JSXComponent\nexport const IconValue = [String, Function, Object] as PropType<IconValue>\n\nexport interface IconAliases {\n  [name: string]: IconValue\n  complete: IconValue\n  cancel: IconValue\n  close: IconValue\n  delete: IconValue\n  clear: IconValue\n  success: IconValue\n  info: IconValue\n  warning: IconValue\n  error: IconValue\n  prev: IconValue\n  next: IconValue\n  checkboxOn: IconValue\n  checkboxOff: IconValue\n  checkboxIndeterminate: IconValue\n  delimiter: IconValue\n  sort: IconValue\n  expand: IconValue\n  menu: IconValue\n  subgroup: IconValue\n  dropdown: IconValue\n  radioOn: IconValue\n  radioOff: IconValue\n  edit: IconValue\n  ratingEmpty: IconValue\n  ratingFull: IconValue\n  ratingHalf: IconValue\n  loading: IconValue\n  first: IconValue\n  last: IconValue\n  unfold: IconValue\n  file: IconValue\n  plus: IconValue\n  minus: IconValue\n}\n\nexport interface IconProps {\n  tag: string\n  icon: IconValue\n  disabled?: Boolean\n}\n\ntype IconComponent = JSXComponent<IconProps>\n\nexport interface IconSet {\n  component: IconComponent\n}\n\nexport type IconOptions = {\n  defaultSet: string\n  aliases?: Partial<IconAliases>\n  sets: Record<string, IconSet>\n}\n\ntype IconInstance = {\n  component: IconComponent\n  icon: IconValue\n}\n\nexport const IconSymbol: InjectionKey<IconOptions> = Symbol.for('vuetify:icons')\n\nexport const makeIconProps = propsFactory({\n  icon: {\n    type: IconValue,\n    required: true,\n  },\n  // Could not remove this and use makeTagProps, types complained because it is not required\n  tag: {\n    type: String,\n    required: true,\n  },\n}, 'icon')\n\nexport const VComponentIcon = defineComponent({\n  name: 'VComponentIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return (\n        <props.tag>\n          <props.icon />\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport const VSvgIcon = defineComponent({\n  name: 'VSvgIcon',\n\n  inheritAttrs: false,\n\n  props: makeIconProps(),\n\n  setup (props, { attrs }) {\n    return () => {\n      return (\n        <props.tag { ...attrs } style={ null }>\n          <svg\n            class=\"v-icon__svg\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            role=\"img\"\n            aria-hidden=\"true\"\n          >\n            <path d={ props.icon as string }></path>\n          </svg>\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport const VLigatureIcon = defineComponent({\n  name: 'VLigatureIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return <props.tag>{ props.icon }</props.tag>\n    }\n  },\n})\n\nexport const VClassIcon = defineComponent({\n  name: 'VClassIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return <props.tag class={ props.icon }></props.tag>\n    }\n  },\n})\n\nexport const defaultSets: Record<string, IconSet> = {\n  svg: {\n    component: VSvgIcon,\n  },\n  class: {\n    component: VClassIcon,\n  },\n}\n\n// Composables\nexport function createIcons (options?: IconOptions) {\n  return mergeDeep({\n    defaultSet: 'mdi',\n    sets: {\n      ...defaultSets,\n      mdi,\n    },\n    aliases,\n  }, options)\n}\n\nexport const useIcon = (props: Ref<string | undefined> | { icon?: IconValue }) => {\n  const icons = inject(IconSymbol)\n\n  if (!icons) throw new Error('Missing Vuetify Icons provide!')\n\n  const iconData: Ref<IconInstance> = computed(() => {\n    const iconAlias = isRef(props) ? props.value : props.icon\n\n    if (!iconAlias) throw new Error('Icon value is undefined or null')\n\n    let icon: IconValue | undefined = iconAlias\n\n    if (typeof iconAlias === 'string' && iconAlias.includes('$')) {\n      icon = icons.aliases?.[iconAlias.slice(iconAlias.indexOf('$') + 1)]\n    }\n\n    if (!icon) throw new Error(`Could not find aliased icon \"${iconAlias}\"`)\n\n    if (typeof icon !== 'string') {\n      return {\n        component: VComponentIcon,\n        icon,\n      }\n    }\n\n    const iconSetName = Object.keys(icons.sets).find(\n      setName => typeof icon === 'string' && icon.startsWith(`${setName}:`)\n    )\n\n    const iconName = iconSetName ? icon.slice(iconSetName.length + 1) : icon\n    const iconSet = icons.sets[iconSetName ?? icons.defaultSet]\n\n    return {\n      component: iconSet.component,\n      icon: iconName,\n    }\n  })\n\n  return { iconData }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}